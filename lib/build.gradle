/*
 * Copyright 2014 serso aka se.solovyev
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * Contact details
 *
 * Email: se.solovyev@gmail.com
 * Site:  http://se.solovyev.org
 */

apply plugin: 'com.android.library'

android {
    compileSdkVersion versions.sdk.compile
    defaultConfig {
        minSdkVersion versions.sdk.min
        targetSdkVersion versions.sdk.target
        versionCode versions.code
        versionName versions.name
        consumerProguardFiles 'proguard-rules.txt'
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    api 'com.google.code.findbugs:jsr305:3.0.2'
    implementation "com.android.billingclient:billing:${versions.libs.billing}"

    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.robolectric:robolectric:4.5.1'
    testImplementation "org.mockito:mockito-all:1.9.5"
    testImplementation "org.skyscreamer:jsonassert:1.5.0"
}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class"
}

task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    configurations.compile.each { File file -> classpath += project.files(file.path) }
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveExtension.set('javadoc')
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    archiveExtension.set('sources')
    from android.sourceSets.main.java.srcDirs
}

afterEvaluate {
    publishing {
        publications {
            releaseLib(MavenPublication) {
                from components.release

                artifact androidSourcesJar
                artifact androidJavadocsJar

                artifactId = 'checkout'
                configurePublication(releaseLib, 'aar')
            }
        }
    }
}
