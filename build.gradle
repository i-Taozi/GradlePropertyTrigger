plugins {
  id 'net.researchgate.release' version '2.8.0'
  id 'java'
  id 'maven'
  id 'signing'
}

sourceCompatibility = 1.8
group = 'com.github.drapostolos'
archivesBaseName = 'type-parser'
afterReleaseBuild.dependsOn uploadArchives

repositories {
    mavenCentral()
}

dependencies { 
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:1.7.1'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'type-parser'
        packaging 'jar'
        description 'This is a lightweigth library that does nothing but parse a string to a given type. Supports most of the java classes, such as Integer, File, Enum, Float and also generic types as well, such as List&lt;Integer&gt;, Set&lt;File&gt; etc. Also possible to register your own parsers.'
        url 'https://github.com/drapostolos/type-parser.git'

        scm {
          connection 'scm:git:https://github.com/drapostolos/type-parser.git'
          developerConnection 'scm:git:https://github.com/drapostolos/type-parser.git'
          url 'https://github.com/drapostolos/type-parser.git'
        }

        licenses {
          license {
            name 'The MIT License (MIT)'
            url 'http://opensource.org/licenses/MIT'
          }
        }

        developers {
          developer {
            id 'drapostolos'
            name 'Alexander Poulikakos'
            email 'github@labelscans.com'
          }
        }
      }
    }
  }
}

release {
    preTagCommitMessage = '[Gradle Release Plugin] - release '
    tagCommitMessage = '[Gradle Release Plugin] - creating tag '
    newVersionCommitMessage = '[Gradle Release Plugin] - prepare for next development iteration '
    tagTemplate = '$name-$version'
    buildTasks = ['build']
}
