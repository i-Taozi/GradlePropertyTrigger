apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        applicationId "com.halzhang.android.apps.startupnews"
        versionCode 13
        versionName "2.0.0-${gitSha}"
    }

    signingConfigs {
        release
    }

    File storeFile = file("../local.properties")
    if (storeFile.canRead()) {
        Properties p = new Properties()
        p.load(storeFile.newDataInputStream())
        if (p != null && p.containsKey('key.store') && p.containsKey("key.store.password")
                && p.containsKey("key.alias") && p.containsKey("key.alias.password")) {
            android.signingConfigs.release.storeFile = file(p.getProperty("key.store"))
            android.signingConfigs.release.storePassword = p.getProperty("key.store.password")
            android.signingConfigs.release.keyAlias = p.getProperty("key.alias")
            android.signingConfigs.release.keyPassword = p.getProperty("key.alias.password")
        } else {
            android.buildTypes.release.signingConfig = null
        }
    } else {
        android.buildTypes.release.signingConfig = null
    }

    buildTypes {
        debug {
            debuggable true
            versionNameSuffix "-debug"
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "SN(debug)"
        }

        release {

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    if (output.outputFile != null && output.outputFile.name.endsWith('.apk')
                            && 'release'.equals(variant.buildType.name)) {
                        def apkFile = new File(
                                output.outputFile.getParent(),
                                "StartupNews_${variant.flavorName}_v${variant.versionName}.apk")
                        output.outputFile = apkFile
                    }
                }
            }


            resValue "string", "app_name", "StartupNews"
            shrinkResources true
            debuggable false
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }

    }

    productFlavors {
        googleplay {}
    }

}

dependencies {

    def androidSupportVersion = rootProject.ext.androidSupportVersion
    def mvpVersion = rootProject.ext.mvpVersion

    compile fileTree(dir: 'libs', include: '*.jar')
    compile "com.android.support:appcompat-v7:${androidSupportVersion}"
    compile "com.android.support:support-v4:${androidSupportVersion}"
    compile "com.android.support:support-annotations:${androidSupportVersion}"
    compile "com.android.support:recyclerview-v7:${androidSupportVersion}"
    compile "com.android.support:cardview-v7:${androidSupportVersion}"
    compile "com.android.support:design:${androidSupportVersion}"
    compile "com.android.support:customtabs:${androidSupportVersion}"
    compile "com.github.halzhang:mvp:${mvpVersion}"
    compile "com.github.halzhang:mvp-support-v4:${mvpVersion}"
    compile "com.github.halzhang:mvp-support-v7:${mvpVersion}"
    // Dagger dependencies
    apt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    provided 'org.glassfish:javax.annotation:10.0-b28'
    compile "com.google.dagger:dagger:$rootProject.daggerVersion"

    compile project(':3rdlib:commonlog')
    compile project(':3rdlib:commontoast')
    compile project(':data')
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3'
    compile 'org.jsoup:jsoup:1.7.2'
    compile 'com.android.support:support-v4:23.4.0'
}
